$(window).ready(function() {

    window.WebSocket = window.WebSocket || window.MozWebSocket;

    var websocket = new WebSocket('ws://192.168.43.88:7681',
      'details');                


    var count_client =0;
    var cpu_buffer=[];
    var ram_buffer=[];

    websocket.onopen = function () {
        console.log('verbindung hergestellt');
    };

    websocket.onerror = function (e) {
        alert(e);
    };

    var sendObject = function(obj){
        obj = JSON.stringify(obj,null,4);
        websocket.send(obj);
    }
    var c_cpu=0;var c_ram=0;
    websocket.onmessage = function (message) {
        var obj = JSON.parse(message.data);
        //console.log('erhalten obj');
       // console.log(obj); 
       for (var i = obj.length - 1; i >= 0; i--) {
        switch (obj[i].request) {
            case "count_client": 
            checkCount(obj[i].data);
            break;
            case "cpu-live":
            handleCpu(obj[i].data);
            cpu_buffer[c_cpu]=obj[i].data;
            c_cpu++;
            break;
            case "ram-live":
            handleRam(obj[i].data); 
            ram_buffer[c_ram]=obj[i].data;    
            c_ram++;               
            break;
            case "storage-info":
            handleStorage(obj[i].data);                    
            break;                
            case "cpu-info":
            handleCpuInfo(obj[i].data);                    
            break;                  
        }
    }

}

websocket.onclose = function (close) {

};


var  handleCpu=function(obj){
    $('.cpu-details .btn').removeClass("btn-danger").addClass("btn-primary");
    $.each( obj, function( key, value ) {
        $('.bar[label=' + key + ']').find(".value").animate({
            height: (value*210)/100
        },2);
        if(key=="temp"){
            if(value>48){
                classe="btn-danger"; 
                $('.cpu-details .btn').removeClass("btn-primary").addClass("btn-danger");                                   
            }
            $('#cpuTemp').text(value);
        }                   
    });
}
var  handleRam=function(obj){

    $.each( obj, function( key, value ) {
        $('.bar[label=' + key + ']').find(".value").animate({
            height: (value*210)/925
        },2);
    });
}

var handleCpuInfo=function(obj){
    $('.cpu-info tbody').html("");
    $.each( obj, function( key, value ) {
        var tr=$("<tr/>");
        var th_k=$("<th/>");
        var th_v=$("<th/>");             
        th_k.text(key);
        th_v.text(value);
        tr.append(th_k);
        tr.append(th_v); 
        $('.cpu-info tbody').append(tr);           
    });
}


var handleStorage=function(obj){

    var pieData = [
    {
        value: 300,
        color:"#F7464A",
        highlight: "#FF5A5E",
        label: "Total"
    },
    {
        value: 50,
        color: "#46BFBD",
        highlight: "#5AD3D1",
        label: "Used"
    },
    {
        value: 100,
        color: "#FDB45C",
        highlight: "#FFC870",
        label: "Free"
    }
    ];
    pieData[0].value=obj.total;
    pieData[1].value=obj.used;
    pieData[2].value=obj.free;

    var ctx = document.getElementById("chart-area").getContext("2d");
    window.myPie = new Chart(ctx).Pie(pieData);
}

//realtime

var last_value_ram_used=0;
var last_value_ram_free=0;
var last_value_ram_buffers=0;
var last_value_ram_shared=0;
var last_value_ram_cached=0;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

var  cpu_buffer_tmp=[]; 

setInterval(function(){


 

cpu_buffer_tmp=cpu_buffer;cpu_buffer=[];c_cpu=0;

//cpu
var pallete = $('<div class="pallete"/>');
var canvas = document.createElement('canvas');


canvas.height = 240;
canvas.width = 340;

/*  idle*/
ctx = canvas.getContext("2d");

ctx.strokeStyle="aquamarine";
ctx.fill="#FF0000";
ctx.beginPath();



var spane = 340/(cpu_buffer_tmp.length);
var step=0;
for (var i = 0; i < cpu_buffer_tmp.length ; i++) {

    ctx.lineTo(step,240-((cpu_buffer_tmp[i].idle*240)/100)); 
    step=step+spane;
}                

ctx.stroke();

/* end idle*/

/* user */

user_ctx = canvas.getContext("2d");

user_ctx.strokeStyle="#FF00FF";
user_ctx.beginPath();


step=0;
for (var i = 0; i < cpu_buffer_tmp.length; i++) {

    user_ctx.lineTo(step,240-((cpu_buffer_tmp[i].user*240)/100)); 
    step=step+spane;
}                

user_ctx.stroke();
/* end user */

/* system */

system_ctx = canvas.getContext("2d");

system_ctx.strokeStyle="sienna";
system_ctx.beginPath();


step=0;
for (var i = 0; i < cpu_buffer_tmp.length ; i++) {

    system_ctx.lineTo(step,240-((cpu_buffer_tmp[i].system*240)/100)); 
    step=step+spane;
}                

system_ctx.stroke();
/* end system */


/* wait */

wait_ctx = canvas.getContext("2d");

wait_ctx.strokeStyle="teal";
wait_ctx.beginPath();


step=0;
for (var i = 0; i < cpu_buffer_tmp.length ; i++) {

    wait_ctx.lineTo(step,240-((cpu_buffer_tmp[i].wait*240)/100)); 
    step=step+spane;
}                

wait_ctx.stroke();
/* end wait */


pallete.append(canvas);

$('.halter-cpu').append(pallete);
pallete.animate({"right":"100%"});
if($('.halter-cpu .pallete').size()>4){
    $('.halter-cpu .pallete').eq(0).remove();
} 
/* end cpu*/
},2000);


setInterval(function(){
//ram

var  ram_buffer_tmp=[];   

ram_buffer_tmp=ram_buffer;ram_buffer=[];c_ram=0;


var pallete = $('<div class="pallete"/>');
var canvas = document.createElement('canvas');


canvas.height = 240;
canvas.width = 340;

/*  used*/
ctx = canvas.getContext("2d");

ctx.strokeStyle="blue";
ctx.beginPath();



var spane = 340/(ram_buffer_tmp.length);
var step=0;

var bisher=0;


for (var i = 0; i < ram_buffer_tmp.length ; i++) {

    ctx.lineTo(step,240-((ram_buffer_tmp[i].used*240)/925)); 
    step=step+spane;
    
}                

ctx.stroke();

/* end used*/

/* free */

user_ctx = canvas.getContext("2d");

user_ctx.strokeStyle="#FF00FF";
user_ctx.beginPath();



step=0;
for (var i = 0; i < ram_buffer_tmp.length ; i++) {

    user_ctx.lineTo(step,240-((ram_buffer_tmp[i].free*240)/925)); 
    step=step+spane;
}                

user_ctx.stroke();
/* end free */

/* shared */

system_ctx = canvas.getContext("2d");

system_ctx.strokeStyle="silver";
system_ctx.beginPath();


var step=0;
for (var i = 0; i < ram_buffer_tmp.length ; i++) {

    system_ctx.lineTo(step,240-((ram_buffer_tmp[i].shared*240)/925)); 
    step=step+spane;
}                

system_ctx.stroke();
/* end shared */


/* cached */

wait_ctx = canvas.getContext("2d");

wait_ctx.strokeStyle="#FF99EF";
wait_ctx.beginPath();

step=0;
for (var i = 0; i < ram_buffer_tmp.length ; i++) {

    wait_ctx.lineTo(step,240-((ram_buffer_tmp[i].cached*240)/925));
    step=step+spane;
}                

wait_ctx.stroke();
/* end cached */


/* buffers */

wait_ctx = canvas.getContext("2d");

wait_ctx.strokeStyle="black";
wait_ctx.beginPath();


step=0;
for (var i = 0; i < ram_buffer_tmp.length ; i++) {

    wait_ctx.lineTo(step,240-((ram_buffer_tmp[i].buffers*240)/925));
    step=step+spane;
}                

wait_ctx.stroke();
/* end buffers */


pallete.append(canvas);

last_value_ram_used=ram_buffer_tmp[ram_buffer_tmp.length-1].used;
console.log(last_value_ram_used);
last_value_ram_free=ram_buffer_tmp[ram_buffer_tmp.length-1].free;
last_value_ram_shared=ram_buffer_tmp[ram_buffer_tmp.length-1].shared;
last_value_ram_cached=ram_buffer_tmp[ram_buffer_tmp.length-1].cached;



$('.halter-ram').append(pallete);
pallete.animate({"right":"100%"});
if($('.halter-ram .pallete').size()>4){
    $('.halter-ram .pallete').eq(0).remove();
} 
/* end ram*/


},2000);



//realtime       

});


